// <auto-generated />
using System;
using BarFoo.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarFoo.Data.Migrations
{
    [DbContext(typeof(BarFooDbContext))]
    [Migration("20240824111918_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("BarFoo.Domain.Entities.ApiKey", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasBeenSyncedOnce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastSyncTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.HasKey("Name");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("BarFoo.Domain.Entities.ApiKeyObjective", b =>
                {
                    b.Property<string>("ApiKeyName")
                        .HasColumnType("TEXT");

                    b.Property<int>("ObjectiveId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ApiKeyName", "ObjectiveId");

                    b.HasIndex("ObjectiveId");

                    b.ToTable("ApiKeyObjectives");
                });

            modelBuilder.Entity("BarFoo.Domain.Entities.Objective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Acclaim")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiEndpoint")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Claimed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProgressComplete")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProgressCurrent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Track")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Objectives");
                });

            modelBuilder.Entity("BarFoo.Domain.Entities.ApiKeyObjective", b =>
                {
                    b.HasOne("BarFoo.Domain.Entities.ApiKey", "ApiKey")
                        .WithMany("ApiKeyObjectives")
                        .HasForeignKey("ApiKeyName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarFoo.Domain.Entities.Objective", "Objective")
                        .WithMany("ApiKeyObjectives")
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApiKey");

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("BarFoo.Domain.Entities.ApiKey", b =>
                {
                    b.Navigation("ApiKeyObjectives");
                });

            modelBuilder.Entity("BarFoo.Domain.Entities.Objective", b =>
                {
                    b.Navigation("ApiKeyObjectives");
                });
#pragma warning restore 612, 618
        }
    }
}
